apply plugin: 'com.android.application'

android {
    compileSdkVersion 31
    buildToolsVersion '30.0.3'

    defaultConfig {
        applicationId "com.bike.ftms.app"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode getMyAppVersionCode()
        versionName "2.0-220303-02"
        testInstrumentationRunner "androidx.fragment_workouts.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            resValue("string", "PORT_NUMBER", "8081")
        }
    }

    signingConfigs {
        debug {
            keyAlias 'com.bike.ftms.app'
            keyPassword 'android'
            storeFile file('./BikeFtms.jks')
            storePassword 'android'
        }
        release {
            keyAlias 'com.anplus.sm'
            keyPassword 'android'
            storeFile file('./Anplus.keystore')
            storePassword 'android'
        }
    }

    //自动生成指定名称的release发布版的 apk文件
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "D-Fit" + "_" + versionName + ".apk"
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    testImplementation 'junit:junit:4.13.2'
    implementation 'org.litepal.android:core:2.0.0'

    implementation 'com.jakewharton:butterknife:10.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'

    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'org.litepal.android:core:2.0.0'

    implementation 'tech.gujin:toast-util:1.1.1'
    implementation 'com.amitshekhar.android:debug-db:1.0.0'
    implementation 'com.andreabaccega:android-form-edittext:1.3.5'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.8.1'
//    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:2.8.1'
//    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:2.8.1'

    // 下拉刷新框架
//    implementation 'com.scwang.smart:refresh-layout-kernel:2.0.3'
//    implementation 'com.scwang.smart:refresh-header-material:2.0.3'

    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-x'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-x'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
//    implementation  'io.github.scwang90:refresh-footer-classics:2.0.3'    //经典加载

    // 日志打印框架：https://github.com/JakeWharton/timber
//    implementation 'com.jakewharton.timber:timber:4.7.1'

    implementation 'com.github.xesam:AndroidTimer:v0.1'

    // 日志调试框架：https://github.com/getActivity/Logcat
    // 可在手机上显示logcat
//    debugImplementation 'com.github.getActivity:Logcat:9.9'
}

task updateVersionCode() {
    doFirst {
        // 获取 gradle.properties 文件
        def gradleProperties = file('../app/version.properties')
        // 读取里面的键值对
        def properties = new Properties()
        properties.load(new FileInputStream(gradleProperties))
        // 获取里面的 APP_VERSION_CODE 进行 +1
        def codeBumped = properties['APP_VERSION_CODE'].toInteger() + 1
        // 重新赋值
        properties['APP_VERSION_CODE'] = codeBumped.toString()
        // 写入
        properties.store(gradleProperties.newWriter(), null)
    }
}

project.tasks.whenTaskAdded { Task theTask ->
    if (theTask.name == 'assembleRelease') {
        theTask.dependsOn(updateVersionCode)
        theTask.mustRunAfter(updateVersionCode)
    }
}

def getMyAppVersionCode() {  //获取APP版本号
    def gradleProperties = file('../app/version.properties')
    def properties = new Properties()
    properties.load(new FileInputStream(gradleProperties))
    def codeBumped = properties['APP_VERSION_CODE'].toInteger() + 1
    return codeBumped as int
}
